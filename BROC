#edit-mode: -*- python -*-
#coding:utf-8

#set the search path of compiler comamnd
#COMPILER_PATH("/usr/bin")

#Preprocessor flags.
#CPPFLAGS('debug flags', 'release flags')

#C flags.
#CFLAGS('debug flags', 'release flags')

#C++ flags.
#CXXFLAGS('debug flags', 'release flags')

#-I path
#INCLUDE('./include $WORKSPACE/a/b/c/include')

#link flags
#LDFLAGS('-lpthread -lcrypto -lrt')

#trunk dependent module in svn 
#CONFIGS("app/foo/sky@trunk")
#CONFIGS("app/foo/sky@trunk@12345")

#branch dependent module in svn 
#CONFIGS("app/foo/sky@sky_1-0-0-0_BRANCH")
#CONFIGS("app/foo/sky@sky_1-0-0-0_BRANCH@12345")

#tag dependent module in svn
#CONFIGS("app/foo/sky@sky_1-0-0-1_PD_BL")

#master dependent module in git
#CONFIGS("sky@master@branch")

#branch dependent module in git
#CONFIGS("sky@dev@branch")

#tag dependent module in git
#CONFIGS("sky@v1.0.0@tag")

#mv file or dirctory to $OUT
#PUBLISH("relative path to BROC", "$OUT")

#bin
#APPLICATION('name',
#            Sources("src/*.cpp", Include('a/b/c')),
#            LinkFlags("link flags"),
#            Libs("$OUT_ROOT/a/b/c/output/lib/libutil.a"))
#
APPLICATION('hello',Sources("hello.cc"))

#ut bin
#UT_APPLICATION('name',
#               Sources("src/*.cpp", Include('a/b/c')),
#               LinkFlags("link flags"),
#               Libs("$OUT_ROOT/a/b/c/output/lib/libutil.a"),
#               UTArgs(""))

#static library file .a
#STATIC_LIBRARY('name',
#               Sources("src/*.cpp", Include('a/b/c')),
#               Libs("$OUT_ROOT/a/b/c/output/lib/libutil.a"))

#proto static library file .a
#PROTO_LIBRARY('name',
#              'proto/*.proto',
#               Proto_Flags(""),
#               Include(""),
#               CppFlags("debug flags", "release flags"),
#               CxxFlags("debug falgs","release flas"),
#               Libs("$OUT_ROOT/a/b/c/output/lib/libutil.a"))